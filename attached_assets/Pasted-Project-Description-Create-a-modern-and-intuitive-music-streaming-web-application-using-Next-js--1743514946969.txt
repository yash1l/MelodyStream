Project Description:

Create a modern and intuitive music streaming web application using Next.js. The app will allow users to create and manage playlists, including a default "Liked" playlist. The user interface will be sleek and responsive, featuring song cards with interactive hover options and a mini player for seamless music control.

Features:

User Playlists:

Users can create, edit, and delete playlists.
A default "Liked" playlist for users to easily save their favorite songs.
Song Cards:

Display songs as cards with hover options:
Play: Start playing the song.
Like: Add the song to the "Liked" playlist.
Add to Playlist: Add the song to any user-created playlist.
Play Next: Queue the song to play next.
Add to Queue: Add the song to the current queue.
Mini Player:

Display the currently playing song with its image.
Include controls for play/pause, skip, and volume.
Show the current time and total duration of the song.
A queue icon to open a right-side queue display.
Sidebar Navigation:

Expandable on hover for easy access.
Home: Top music recommendations and new releases.
About: Information about the site and updates.
Library: Access to user-created and default playlists.
Notifications: User notifications.
Search: Search for songs, artists, and albums.
User Profile: Account details, settings, audio controls, and theme change (stored locally).
Dynamic Song Importing:

Implement dynamic importing of songs into a single page.tsx file for efficient distribution across the app.
Technical Requirements:

Next.js: For server-side rendering and optimized performance.
React: For building the user interface components.
Tailwind CSS: For styling and responsive design.
Redux or Context API: For state management.
Firebase or Supabase: For user authentication and database management.
Spotify API or similar: For fetching song data and streaming.
Additional Enhancements:

Responsive Design: Ensure the app is fully responsive and works seamlessly on all devices.
Dark Mode: Provide a dark mode option for users.
Accessibility: Implement accessibility features to make the app usable for everyone.
Animations: Add subtle animations for a smooth user experience.